// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cliente {
  id_cliente      String    @id
  nombre          String
  ruc             String    @unique
  email           String    @unique  // ðŸ‘ˆ hace falta esto
  password        String             // ðŸ‘ˆ nuevo campo para login
  fecha_registro  DateTime

    // Nuevos campos
  telefono        String?    // con `?` es opcional
  direccion       String?
  pais            String?
  email_contacto  String?
  certificaciones String?
  
  productos       Producto[]
}

model Producto {
  id_producto          String   @id @default(uuid())
  codigo_interno       String
  descripcion          String
  marca                String
  modelo               String
  material             String
  norma_tecnica        String
  unidad               String
  stock_actual         Int
  precio_actual        Float
  moneda               String
  tiempo_entrega       String
  ubicacion_stock      String
  estado               String
  fecha_actualizacion  DateTime

  proveedor            Cliente  @relation(fields: [proveedor_id], references: [id_cliente], onDelete: Cascade)
  proveedor_id         String

  @@unique([codigo_interno, proveedor_id], name: "codigo_interno_proveedor_id")
}

// prisma/schema.prisma
model RecommendationBatch {
  id              String               @id @default(cuid())
  cliente_id      String
  fecha_analisis  DateTime?
  nota_general    String?
  total           Int                  @default(0)
  createdAt       DateTime             @default(now())
  items           RecommendationItem[]

  @@index([cliente_id, createdAt])
}

model RecommendationItem {
  id        String   @id @default(cuid())
  batchId   String
  tipo      String   // "precio" | "stock" | "perfil"
  mensaje   String
  producto  String?  // null o texto
  prioridad String   // "alta" | "media" | "baja"

  batch     RecommendationBatch @relation(fields: [batchId], references: [id], onDelete: Cascade)

  @@index([batchId])
}


